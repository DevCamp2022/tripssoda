<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.devcamp.tripssoda.mapper.ProductMapper">
    <insert id="insertProduct" parameterType="ProductDto" useGeneratedKeys="true" keyProperty="productId">
        INSERT INTO product
        (
        partner_id,
        title,
        category,
        thumbnail,
        req_time,
        keyword,
        refund_amount,
        day_cnt,
        min_member,
        max_member,
        prd_intro,
        course_intro,
        pickup_type,
        pickup_option,
        inclusion,
        exclusion,
        additional_info,
        meeting_point,
        mandatory_guidance,
        refund_policy,
        sale_status,
        approval_status,
        created_at,
        created_by,
        updated_at,
        updated_by
        )
        VALUES
        (
        #{partnerId},
        #{title},
        #{category},
        #{thumbnail},
        #{reqTime},
        #{keyword},
        #{refundAmount},
        #{dayCnt},
        #{minMember},
        #{maxMember},
        #{prdIntro},
        #{courseIntro},
        #{pickupType},
        #{pickupOption},
        #{inclusion},
        #{exclusion},
        #{additionalInfo},
        #{meetingPoint},
        #{mandatoryGuidance},
        #{refundPolicy},
        0,
        0,
        now(),
        #{userId},
        now(),
        #{userId}
        )
    </insert>

    <insert id="insertProductOption" parameterType="RegProductOptionDto">
        INSERT INTO product_option
        (
        product_id,
        type,
        name,
        content,
        price,
        order_no,
        countable,
        created_at,
        created_by,
        updated_at,
        updated_by
        )
        VALUES
        (
        #{productId},
        #{type},
        #{name},
        #{content},
        #{price},
        #{orderNo},
        "N",
        now(),
        #{userId},
        now(),
        #{userId}
        )
    </insert>

    <insert id="insertProductSchedule" parameterType="RegProductScheduleDto">
        INSERT INTO product_schedule
        (
        product_id,
        start_date,
        end_date,
        price,
        min_member,
        max_member,
        created_at,
        created_by,
        updated_at,
        updated_by
        )
        VALUES
        (
        #{productId},
        #{scheduleStartDate},
        #{scheduleEndDate},
        #{schedulePrice},
        #{scheduleMinMember},
        #{scheduleMaxMember},
        now(),
        #{userId},
        now(),
        #{userId}
        )
    </insert>

    <select id="selectMainList" parameterType="String" resultType="GetMainListProductDto">
        SELECT
        p.id AS productId,
        ps.id AS scheduleId,
        p.thumbnail,
        p.title,
        p.rating,
        ps.start_date,
        ps.price
        FROM product AS p
        INNER JOIN product_schedule AS ps
        ON (p.id=ps.product_id)
        WHERE date(start_date) >= date(now()) AND category=#{category} GROUP BY p.id
        LIMIT 0, 4;
    </select>

    <select id="selectProductDetail" parameterType="GetDetailProductDto" resultType="GetDetailProductDto">
        SELECT
        p.id as productId,
        ps.id as scheduleId,
        p.category,
        p.rating,
        p.req_time,
        p.title,
        p.keyword,
        p.prd_intro,
        p.course_intro,
        p.inclusion,
        p.exclusion,
        p.additional_info,
        p.meeting_point,
        p.mandatory_guidance,
        p.refund_policy,
        ps.current_member,
        ps.min_member,
        ps.max_member,
        ps.start_date
        FROM product AS p
        INNER JOIN product_schedule AS ps
        ON (p.id=ps.product_id)
        WHERE p.id=#{productId} AND ps.id=#{scheduleId};
    </select>

    <select id="selectProductScheduleList" parameterType="GetDetailProductDto" resultType="GetDetailProductDto">
        SELECT
        id as scheduleId,
        product_id,
        start_date,
        current_member,
        min_member as scheduleMinMember,
        max_member as scheduleMaxMember

        FROM product_schedule
        WHERE product_id=#{productId}
        and date(start_date)>=date(#{startDate});
    </select>

    <select id="selectScheduleList" parameterType="int" resultType="ProductScheduleDto">
        SELECT id as productScheduleId, product_id, start_date, current_member, min_member, max_member
        FROM product_schedule
        WHERE product_id=#{productId}
        and date(start_date)>date(now()+INTERVAL 1 DAY);
    </select>


    <select id="selectProductUpdate" parameterType="int" resultType="UpdateProductDto">
        SELECT
        p.id AS productId,
        p.partner_id,
        p.title,
        p.category,
        p.thumbnail,
        p.rating,
        p.req_time,
        p.keyword,
        p.refund_amount,
        p.day_cnt,
        p.min_member,
        p.max_member,
        p.prd_intro,
        p.course_intro,
        p.additional_info,
        p.inclusion,
        p.exclusion,
        p.meeting_point,
        p.pickup_type,
        p.pickup_option,
        p.mandatory_guidance,
        p.refund_policy
        FROM product AS p
        WHERE p.id=#{productId}
    </select>

    <select id="selectProductOptionUpdate" parameterType="int" resultType="UpdateProductDto">
        SELECT
        po.id AS optionId,
        po.product_id AS productId,
        po.type,
        po.name,
        po.content,
        po.price AS optionPrice,
        po.order_no
        FROM product_option AS po
        WHERE po.product_id=#{productId}
    </select>

    <select id="selectProductScheduleUpdate" parameterType="int" resultType="UpdateProductDto">
        SELECT
        ps.id AS scheduleId,
        ps.product_id AS productId,
        ps.start_date,
        ps.price,
        ps.min_member AS scheduleMinMember,
        ps.max_member AS scheduleMaxMember
        FROM product_schedule AS ps
        WHERE ps.product_id=#{productId}
    </select>

    <update id="updateProduct" parameterType="UpdateProductDto">
        UPDATE product
        SET
        title = #{title},
        category = #{category},
        thumbnail = #{thumbnail},
        rating = #{rating},
        req_time = #{reqTime},
        keyword = #{keyword},
        refund_amount = #{refundAmount},
        day_cnt = #{dayCnt},
        min_member = #{minMember},
        max_member = #{maxMember},
        prd_intro = #{prdIntro},
        course_intro = #{courseIntro},
        additional_info = #{additionalInfo},
        inclusion = #{inclusion},
        exclusion = #{exclusion},
        meeting_point = #{meetingPoint},
        pickup_type = #{pickupType},
        pickup_option = #{pickupOption},
        mandatory_guidance = #{mandatoryGuidance},
        refund_policy = #{refundPolicy},
        updated_at=now(),
        updated_by=#{userId}
        WHERE id = #{productId}
    </update>

    <insert id="updateProductOption" parameterType="RegProductOptionDto">
        INSERT INTO product_option
        (
        id,
        product_id,
        type,
        name,
        content,
        price,
        order_no,
        updated_at,
        updated_by
        )
        VALUES
        (
        #{productOptionId},
        #{productId},
        #{type},
        #{name},
        #{content},
        #{price},
        #{orderNo},
        now(),
        #{userId}
        )
        ON DUPLICATE KEY UPDATE
        id = #{productOptionId},
        product_id = #{productId},
        type = #{type},
        name = #{name},
        content = #{content},
        price = #{price},
        order_no = #{orderNo},
        updated_at = now(),
        updated_by = #{userId}
    </insert>

    <delete id="deleteProductOption" parameterType="int">
        DELETE FROM product_option WHERE id=#{productOptionId}
    </delete>

    <insert id="updateProductSchedule" parameterType="RegProductScheduleDto">
        INSERT INTO product_schedule
        (
        id,
        product_id,
        start_date,
        price,
        min_member,
        max_member,
        updated_at,
        updated_by
        )
        VALUES
        (
        #{productScheduleId},
        #{productId},
        #{scheduleStartDate},
        #{schedulePrice},
        #{scheduleMinMember},
        #{scheduleMaxMember},
        now(),
        #{userId}
        )
        ON DUPLICATE KEY UPDATE
        product_id = #{productId},
        start_date = #{scheduleStartDate},
        price = #{schedulePrice},
        min_member = #{scheduleMinMember},
        max_member = #{scheduleMaxMember},
        updated_at = now(),
        updated_by = #{scheduleUpdatedBy}
    </insert>

    <delete id="deleteProductSchedule" parameterType="int">
        DELETE FROM product_schedule WHERE id=#{productScheduleId}
    </delete>

    <select id="count" resultType="int">
        select count(*) from product;
    </select>

    <select id="selectProductDetailById" parameterType="int" resultType="GetDetailProductDto">
        SELECT *
        FROM product AS p
                 INNER JOIN product_schedule AS ps
                            ON (p.id=ps.product_id)
        WHERE p.id=#{productId}
        group by p.id;
    </select>

    <select id="selectProductAvailability" parameterType="Map" resultType="int">
        SELECT
            CASE WHEN(current_member>=max_member) THEN 0 ELSE 1 END
                AS available FROM product_schedule
        WHERE product_id = #{productId} AND id =#{scheduleId}
    </select>

    <update id="increaseCurrentMember" parameterType="Map">
        UPDATE
            product_schedule
        SET current_member = CASE
                                 WHEN (current_member <![CDATA[<]]> max_member)
                                     THEN current_member+1 ELSE current_member END,
            member_status = CASE
                                WHEN (current_member=max_member)
                                    THEN 1 ELSE 0 END
        WHERE product_id=#{productId} AND id = #{scheduleId};
    </update>
    <update id="setUpdateBy" parameterType="Map">
        UPDATE
            product_schedule
        SET
            updated_by = #{userId},
            updated_at = now()
        WHERE
            product_id = #{productId} AND id=#{scheduleId};
    </update>
    <update id="updateProductApproval" parameterType="ApprovalDto">
        UPDATE
            product
        SET approval_status = #{approval},
            updated_at = now(),
            updated_by = #{userId}
        WHERE id = #{productId}
    </update>
    <insert id="insertPartnerApprovalHistory" parameterType="ApprovalDto">
        INSERT INTO
            partner_approval_history
        (partner_id, canceled_reason, canceled_at,
         created_at, created_by, updated_at, updated_by)
            VALUE(#{userId}, #{reason}, now(), now(),
            #{userId}, now(), #{userId})
        ON DUPLICATE KEY UPDATE partner_id = #{userId};
    </insert>
    <insert id="insertProductApprovalHistory" parameterType="ApprovalDto">
        INSERT INTO
            product_approval_history
        (product_id, canceled_reason, canceled_at,
         created_at, created_by, updated_at, updated_by)
            VALUE(#{productId}, #{reason}, now(), now(),
            #{userId}, now(), #{userId})
        ON DUPLICATE KEY UPDATE product_id = #{productId};
    </insert>
    <select id="selectOptionList" parameterType="int" resultType="ProductOptionDto">
        SELECT
            *
        FROM
            product_option
        WHERE
            product_id=#{productId};
    </select>
    <select id="selectProductByApprovalStatus" parameterType="String" resultType="ApprovalProductDto">
        SELECT
            pt.user_id as partner_id,
            pt.company_name as company_name,
            pd.id AS product_id,
            pd.title AS title,
            pd.req_time AS req_time,
            pd.day_cnt AS day_cnt,
            pd.limit_qty AS limit_qty,
            pd.min_member AS min_member,
            pd.max_member AS max_member,
            pd.approval_status as approval_status,
            pds.price as product_price
        FROM
            product AS pd
                LEFT JOIN
            partner AS pt
            ON
                pt.user_id = pd.partner_id
                LEFT JOIN
            product_schedule AS pds
            ON
                pd.id = pds.product_id
        WHERE
            pd.approval_status = #{approvalStatus}
        GROUP BY
            pd.id
        ORDER BY
            pd.created_at;

    </select>

    <select id="selectProductList" parameterType="int" resultType="ProductDto">
        SELECT
            id as productId,
            title,
            category,
            thumbnail,
            rating,
            day_cnt

        FROM product
        WHERE partner_id=#{partnerId}
        ORDER BY productId asc
    </select>

    <select id="selectProductScheduleListforDetail" parameterType="int" resultType="ProductScheduleDto">
        SELECT
            start_date,
            price,
            current_member,
            min_member,
            max_member

        FROM product_schedule
        WHERE product_id=#{productId}
        ORDER BY start_date asc
    </select>
</mapper>